fileFormatVersion: 2
guid: 9afd2528bc7cd124b92ed763501033e5
importerOverride:
  nativeImporterType: 2089858483
  scriptedImporterType:
    serializedVersion: 2
    Hash: 89072204048b7087d871d10c191cb608
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\n/**\r\n * Transform Tool Class\r\n
    */\r\nclass TransformHelper extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n   
    static LookAtCamera(go) {\r\n        if (go) {\r\n            go.transform.LookAt(UnityEngine_1.Camera.main.transform);\r\n       
    }\r\n    }\r\n    static LookAtZepetoCamera(go, cam) {\r\n        go.transform.LookAt(cam.transform);\r\n   
    }\r\n    /**\r\n     * Obtain the relative position relative to the reference
    object\r\n     * @param targetGameObject\r\n     * @param selfObj\r\n     * @returns\r\n    
    */\r\n    static GetTargetDirect(targetGameObject, selfObj) {\r\n        // let
    vectorTarget = targetGameObject.transform.position - selfObj.transform.position;\r\n       
    let x = targetGameObject.transform.position.x - selfObj.transform.position.x;\r\n       
    let y = targetGameObject.transform.position.y - selfObj.transform.position.y;\r\n       
    let z = targetGameObject.transform.position.z - selfObj.transform.position.z;\r\n       
    var vectorTarget = new UnityEngine_1.Vector3(x, 0, z);\r\n        var vectorForward
    = selfObj.transform.forward;\r\n        var dotValue = UnityEngine_1.Vector3.Dot(vectorForward.normalized,
    vectorTarget.normalized);\r\n        var crossValue = UnityEngine_1.Vector3.Cross(vectorForward,
    vectorTarget);\r\n        var LR;\r\n        var FB;\r\n        if (crossValue.y
    > 0) {\r\n            LR = \"r\";\r\n        }\r\n        else {\r\n           
    LR = \"l\";\r\n        }\r\n        if (dotValue > 0) {\r\n            FB = \"f\";\r\n       
    }\r\n        else {\r\n            FB = \"b\";\r\n        }\r\n        if (LR
    == \"r\" && FB == \"f\") {\r\n            //Right front (first quadrant)\r\n           
    return 1;\r\n        }\r\n        else if (LR == \"l\" && FB == \"f\") {\r\n           
    //Left Front (Second Quadrant)\r\n            return 2;\r\n        }\r\n       
    else if (LR == \"l\" && FB == \"b\") {\r\n            //Left rear (third quadrant)\r\n           
    return 3;\r\n        }\r\n        else if (LR == \"r\" && FB == \"b\") {\r\n           
    //Right rear (fourth quadrant)\r\n            return 4;\r\n        }\r\n    }\r\n   
    /**\r\n     * Used to detect sector collision areas\r\n     * @param hero\r\n    
    * @param enemy\r\n     * @param minDistance\r\n     * @param minAngle\r\n    
    * @returns\r\n     */\r\n    static SectorCheck(hero, enemy, minDistance, minAngle)
    {\r\n        var avatarPos = hero.transform.position;\r\n        // avatarPos.z
    = avatarPos.z + 1;\r\n        var enemyPos = enemy.transform.position;\r\n       
    var distance = UnityEngine_1.Vector3.Distance(avatarPos, enemyPos);\r\n       
    // The vector of the protagonist relative to the target\r\n        var srcLocalVect
    = UnityEngine_1.Vector3.op_Subtraction(enemyPos, avatarPos);\r\n        srcLocalVect.y
    = 0;\r\n        //Obtain a point directly in front of the protagonist\r\n       
    var forwardLocalPos = UnityEngine_1.Vector3.op_Addition(UnityEngine_1.Vector3.op_Multiply(hero.transform.forward,
    1), avatarPos);\r\n        //Obtain positive vector\r\n        var forwardLocalVect
    = UnityEngine_1.Vector3.op_Subtraction(forwardLocalPos, avatarPos);\r\n       
    forwardLocalVect.y = 0;\r\n        //Calculate angle\r\n        var angle = UnityEngine_1.Vector3.Angle(srcLocalVect,
    forwardLocalVect);\r\n        // console.log(\"SectorCheck\" + distance + \"
    :: \" + minDistance + \"  ::\" + angle + \" ::  \" + minAngle);\r\n        if
    (distance < minDistance && angle < minAngle) {\r\n            return true;\r\n       
    }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n   
    /**\r\n     * Camera Follow Effect\r\n     * distanceUp  :Vertical height parameter
    between camera and target\r\n     * distanceAway:Horizontal distance parameter
    between camera and target\r\n     * smooth:Position Smooth Movement Interpolation
    Parameter Values\r\n     * camDepthSmooth\r\n     */\r\n    static SetCameraFlower(camera,
    target, distanceUp = 3, distanceAway = 3, smooth = 3) {\r\n        let disPos
    = UnityEngine_1.Vector3.op_Subtraction(UnityEngine_1.Vector3.op_Addition(target.position,
    UnityEngine_1.Vector3.op_Multiply(UnityEngine_1.Vector3.up, distanceUp)), UnityEngine_1.Vector3.op_Multiply(target.forward,
    distanceAway));\r\n        camera.position = disPos; // Vector3.Lerp(camera.position,
    disPos, Time.deltaTime * smooth);\r\n        camera.LookAt(target.position);\r\n   
    }\r\n    /**\r\n     * Set up a third person camera\r\n     * @param camera\r\n    
    * @param playerTrans\r\n     * @param TarPosV3\r\n     * @param backOffset\r\n    
    * @param rightOffset\r\n     * @param upOffset\r\n     */\r\n    static SetCameraTPS(camera,
    playerTrans, TarPosV3, backOffset = 4, rightOffset = 2, upOffset = 2) {\r\n       
    // 1.Calculate the unit vector towards the back\r\n        var backVec = UnityEngine_1.Vector3.op_Subtraction(playerTrans.position,
    TarPosV3);\r\n        backVec.Normalize();\r\n        // 2.Calculate super right
    vectors\r\n        var rightVec = UnityEngine_1.Vector3.Cross(backVec, UnityEngine_1.Vector3.up).normalized;\r\n       
    // 3.Calculate final position\r\n        var endPos = UnityEngine_1.Vector3.op_Addition(UnityEngine_1.Vector3.op_Addition(UnityEngine_1.Vector3.op_Addition(playerTrans.position,
    UnityEngine_1.Vector3.op_Multiply(backVec, backOffset)), UnityEngine_1.Vector3.op_Multiply(rightVec,
    rightOffset)), UnityEngine_1.Vector3.op_Multiply(UnityEngine_1.Vector3.up, upOffset));\r\n       
    // 4.Trans position\r\n        camera.transform.position = endPos;\r\n       
    camera.transform.LookAt(TarPosV3);\r\n    }\r\n    static SmoothFlow(target,
    camera) {\r\n        if (!target)\r\n            return;\r\n        var rotationDamping
    = 10;\r\n        var heightDamping = 3;\r\n        var height = 3;\r\n       
    var distance = 5;\r\n        // Calculate the current rotation angles\r\n       
    var wantedRotationAngle = target.eulerAngles.y;\r\n        var wantedHeight =
    target.position.y + height;\r\n        var currentRotationAngle = camera.transform.eulerAngles.y;\r\n       
    var currentHeight = camera.transform.position.y;\r\n        // Damp the rotation
    around the y-axis\r\n        currentRotationAngle = UnityEngine_1.Mathf.LerpAngle(currentRotationAngle,
    wantedRotationAngle, rotationDamping * UnityEngine_1.Time.deltaTime);\r\n       
    // Damp the height\r\n        currentHeight = UnityEngine_1.Mathf.Lerp(currentHeight,
    wantedHeight, heightDamping * UnityEngine_1.Time.deltaTime);\r\n        // Convert
    the angle into a rotation\r\n        var currentRotation = UnityEngine_1.Quaternion.Euler(0,
    currentRotationAngle, 0);\r\n        // Set the position of the camera on the
    x-z plane to:\r\n        // distance meters behind the target\r\n        camera.transform.position
    = target.position;\r\n        camera.transform.position = UnityEngine_1.Vector3.op_Subtraction(camera.transform.position,
    UnityEngine_1.Vector3.op_Multiply(UnityEngine_1.Quaternion.op_Multiply(currentRotation,
    UnityEngine_1.Vector3.forward), distance));\r\n        // Set the height of the
    camera\r\n        camera.transform.position = new UnityEngine_1.Vector3(camera.transform.position.x,
    currentHeight, camera.transform.position.z);\r\n        // Always look at the
    target\r\n        camera.transform.LookAt(target);\r\n    }\r\n    static SetCameraLookAt(camera,
    sourTrans, tarTrans) {\r\n        camera.position = sourTrans.transform.position;\r\n       
    camera.LookAt(tarTrans.position);\r\n    }\r\n    static CheckInView(camera,
    camTransform, tarPos) {\r\n        if (camTransform == undefined || tarPos ==
    undefined) {\r\n            return false;\r\n        }\r\n        let viewPos
    = camera.WorldToViewportPoint(tarPos);\r\n        let dir = (UnityEngine_1.Vector3.op_Subtraction(tarPos,
    camTransform.position)).normalized;\r\n        let dot = UnityEngine_1.Vector3.Dot(camTransform.forward,
    dir);\r\n        // Scale-out\r\n        var ViewOff = 0.8;\r\n        if (dot
    > 0\r\n            && viewPos.x >= 0 - ViewOff\r\n            && viewPos.x <=
    1 + ViewOff\r\n            && viewPos.y >= 0\r\n            && viewPos.y <= 1)
    {\r\n            return true;\r\n        }\r\n        else {\r\n            return
    false;\r\n        }\r\n    }\r\n    static GetTransformInDeep(checkTsfm, name)
    {\r\n        var trans = checkTsfm.GetComponentsInChildren($typeof(UnityEngine_1.Transform));\r\n       
    for (let i = 0; i < trans.length; i++) {\r\n            if (trans[i].name ==
    name) {\r\n                return trans[i];\r\n            }\r\n        }\r\n       
    return null;\r\n    }\r\n}\r\nexports.default = TransformHelper;\r\n//# sourceMappingURL=data:application/json;base64,","assetPath":"Assets/Scripts/Common/TransformHelper.ts","manifest":{"properties":[],"name":"TransformHelper","description":"","hasAnimatorMove":false},"isCompiled":true}'
  typescriptHash: 8f2b1df856d6f2fe0129e62584190799
  onlyWriteTrigger: 0
